// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// Required: true
	Page uint64 `form:"page, default=1" validate:"number"`
	// Page size | 单页数据行数
	// Required: true
	// Maximum: 100000
	PageSize uint64 `form:"pageSize, default=20" validate:"number,max=100000"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// 邮箱请求体
// swagger:model EmailReq
type EmailReq struct {
	// 钱包地址
	Address string `form:"address"`
}

// swagger:model SubscribeReq
type SubscribeReq struct {
	// 钱包地址
	Address string `json:"address"`
}

// swagger:model StatusResp
type StatusResp struct {
	BaseDataInfo
	Data bool `json:"data"`
}

// 订单文件
type OrderFile struct {
	// 文件名
	FileName string `json:"fileName"`
	// 文件大小
	Size uint64 `json:"size"`
	// 交易ID
	TxId string `json:"txId"`
	// 钱包地址
	Address string `json:"address"`
}

// 创建订单文件
type CreatedOrderFile struct {
	// 数据Url
	DataUrl string `json:"dataURL"`
	// 文件名
	FileName string `json:"filename"`
}

// 订单数据信息
type OrderData struct {
	// 输出index
	OutputIndex uint32 `json:"outputIndex"`
	// 支付地址
	PaymentAddress string `json:"paymentAddress"`
}

// 创建订单请求
// swagger:model CreatedOrderReq
type CreatedOrderReq struct {
	// 客户端id
	ClientId string `json:"clientId"`
	// 接收地址
	ReceiveAddress string `json:"receiveAddress"`
	//  fee rate
	FeeRate uint32 `json:"feeRate"`
	// 文件列表
	Files []CreatedOrderFile `json:"files"`
	// 金额
	Amount uint64 `json:"amount"`
}

// 创建订单信息
// swagger:model CreatedOrderInfo
type CreatedOrderInfo struct {
	// ID
	Id string `json:"id"`
	// 客户端ID
	ClientId string `json:"clientId"`
	// 订单
	Type uint8 `json:"type"`
	// 状态
	Status string `json:"status"`
	// 支付地址
	PayAddress string `json:"payAddress"`
	// 接收地址
	ReceiveAddress string `json:"receiveAddress"`
	// 金额
	Amount uint64 `json:"amount"`
	// 总个数
	Count uint64 `json:"count"`
	// fee rate
	FeeRate uint32 `json:"feeRate"`
	// miner fee
	MinerFee uint64 `json:"minerFee"`
	// 服务费
	ServiceFee uint64 `json:"serviceFee"`
	// 过期时间
	ExTime int64 `json:"exTime"`
	// 创建时间
	CreatedAt int64 `json:"createdAt"`
}

// btc 订单信息
// swagger:model BtcOrderInfo
type BtcOrderInfo struct {
	// id
	Id string `json:"id"`
	// 类型
	Type uint8 `json:"type"`
	// 交易id
	TxId string `json:"txId"`
	// 交易hash
	TxHash string `json:"txHash"`
	// 状态 : Pending Inscribed unpaid
	Status string `json:"status"`
	// 支付地址
	PayAddress string `json:"payAddress"`
	// 接收地址
	ReceiveAddress string `json:"receiveAddress"`
	// 文件列表
	Files []OrderFile `json:"files"`
	// 客户端ID
	ClientId string `json:"clientId"`
	// 总个数
	Count uint64 `json:"count"`
	// fee rate
	FeeRate uint32 `json:"feeRate"`
	// miner fee
	MinerFee uint64 `json:"minerFee"`
	// 服务费
	ServiceFee uint64 `json:"serviceFee"`
	// 金额
	Amount uint64 `json:"amount"`
	// 订单数据
	Data OrderData `json:"data"`
	// 过期时间
	ExTime int64 `json:"exTime"`
	// 创建时间
	CreatedAt int64 `json:"createdAt"`
}

// 创建订单请求
// swagger:model CreatedOrderResp
type CreatedOrderResp struct {
	BaseDataInfo
	// 创建订单信息
	Data CreatedOrderInfo `json:"data"`
}

// 查看订单列表请求
// swagger:model OrderListReq
type OrderListReq struct {
	// 接收地址
	ReceiveAddress string `path:"receiveAddress"`
	PageInfo
}

// btc 订单列表信息
// swagger:model BtcOrderListInfo
type BtcOrderListInfo struct {
	// id
	ID string `json:"id"`
	// 创建时间
	CreatedAt int64 `json:"createdAt"`
	// 状态
	Status string `json:"status"`
}

// 订单列表响应体
// swagger:model OrderListResp
type OrderListResp struct {
	BaseDataInfo
	// 订单列表
	Data OrderList `json:"data"`
}

// 订单列表信息
type OrderList struct {
	BaseListInfo
	// 订单列表
	Data []BtcOrderListInfo `json:"data"`
}

// 订单修改请求
// swagger:model OrderPutInfoReq
type OrderPutInfoReq struct {
	// id
	Id string `path:"id"`
	// 体检地址
	CommitAddrs []string `json:"commitAddrs"`
	// commit hash
	CommitTx string `json:"commitTx"`
	// reveal txs
	RevealTxs []string `json:"revealTxs"`
}

// 订单请求响应
// swagger:model OrderInfoResp
type OrderInfoResp struct {
	BaseDataInfo
	Data BtcOrderInfo `json:"data"`
}

// 项目列表请求体
// swagger:model ProjectListReq
type ProjectListReq struct {
	PageInfo
}

// 项目信息
// swagger:model ProjectInfo
type ProjectInfo struct {
	// 项目名称
	Name string `json:"name"`
	// 项目类型 brc20
	Type string `json:"type"`
	// 项目图片
	Image string `json:"image"`
	// 项目信息
	Information string `json:"information"`
	// 第一个条件满足开启时间
	Stage1 int64 `json:"stage_1"`
	// 第二个条件满足开启时间
	Stage2 int64 `json:"stage_2"`
	// 第三个条件满足开启时间
	Stage3 int64 `json:"stage_3"`
}

// 项目响应
// swagger:model ProjecctResp
type ProjecctResp struct {
	BaseDataInfo
	Data ProjectInfo `json:"data"`
}

// 项目列表
type ProjectList struct {
	BaseListInfo
	Data []ProjectInfo `json:"data"`
}

// 项目响应列表
// swagger:model ProjectListResp
type ProjectListResp struct {
	BaseDataInfo
	Data ProjectList `json:"data"`
}

// 项目请求
// swagger:model ProjectReq
type ProjectReq struct {
	ID string `path:"id"`
}

// 项目tick响应
// swagger:model ProjectTickeResp
type ProjectTickeResp struct {
	BaseDataInfo
	Data ProjectTick `json:"data"`
}

// 项目tick信息
type ProjectTick struct {
	// tick 名称
	Tick string `json:"tick"`
}

type BtcPrice struct {
	BtcPrice string `json:"BTCPrice"`
	Time     int64  `json:"time"`
	Code     string `json:"code"`
}

// swagger:model BtcPriceResp
type BtcPriceResp struct {
	BaseDataInfo
	Data interface{} `json:"data"`
}

// swagger:model BtcCoinInfoResp
type BtcCoinInfoResp struct {
	BaseDataInfo
	Data BtcCoinInfo `json:"data"`
}

// swagger:model BtcCoinInfo
type BtcCoinInfo struct {
	// BTC价格，美元计价
	Price float64 `json:"price"`
}

// swagger:model CategoryMarketInfoResp
type CategoryMarketInfoResp struct {
	BaseDataInfo
	Data CategoryMarketInfo `json:"data"`
}

// swagger:model CategoryMarketInfo
type CategoryMarketInfo struct {
	// 统计的BRC20市场市值
	MarketCap float64 `json:"marketCap"`
	// 统计的BRC20市场24小时交易量
	Volume24h float64 `json:"volume24h"`
}

// swagger:model TickerMarketListReq
type TickerMarketListReq struct {
	PageInfo
	// 按字段排序，可选项有：marketcap/volume24h/price
	Sort string `form:"sort,optional"`
}

// swagger:model TickerMarketListResp
type TickerMarketListResp struct {
	BaseDataInfo
	Data TickerMarketList `json:"data"`
}

type TickerMarketList struct {
	BaseListInfo
	Data []TickerMarketInfo `json:"data"`
}

// swagger:model TickerMarketInfo
type TickerMarketInfo struct {
	// CMC ID，后续获取单个Tick的市场信息需要
	ID int `json:"id"`
	// Tick 名称
	Tick string `json:"tick"`
	// 市值
	MarketCap float64 `json:"marketCap"`
	// 24小时内成交量
	Volume24h float64 `json:"volume24h"`
	// BTC单价
	SatPrice float64 `json:"satPrice"`
}

// swagger:model TickerMarketReq
type TickerMarketReq struct {
	// CMC ID, 可从列表接口返回得到
	ID string `form:"id,optional"`
	// k线图点数
	// 默认值：10
	// 从当前时间往前计算，按照给定时间间隔给出相应数量的数据
	Count int `form:"count,optional,default=10"`
	// K线图时间间隔
	// 默认值：1h
	// 可选值: 1h/2h/3h/4h/5h/6h/12h/1d/2d/3d/7d/14d/15d/30d
	Interval string `form:"interval,optional,default=1h"`
}

// swagger:model TickerMarketDetailResp
type TickerMarketDetailResp struct {
	BaseDataInfo
	Data TickerMarketDetail `json:"data"`
}

type TickerMarketDetail struct {
	TickerMarketInfo
	Quotes []OhlcvDataInUSD `json:"quotes"`
}

type OhlcvDataInUSD struct {
	// 开盘价
	Open float64 `json:"open"`
	// 最高价
	High float64 `json:"high"`
	// 最低价
	Low float64 `json:"low"`
	// 收盘价
	Close float64 `json:"close"`
	// 成交量
	Volume float64 `json:"volume"`
	// 开盘价时间
	OpenTime string `json:"openTime"`
	// 最高价时间
	HighTime string `json:"highTime"`
	// 最低价时间
	LowTime string `json:"lowTime"`
	// 收盘价时间
	CloseTime string `json:"closeTime"`
}
